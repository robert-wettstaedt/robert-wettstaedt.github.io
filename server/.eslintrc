{
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "commonjs": true,
    "node": true,
    "es6": true
  },
  "globals": {
    "DocumentFragment": true
  },
  "rules": {
    /* Possible Errors - The following rules point out areas where you might have made mistakes. */
    "comma-dangle": [1, "always-multiline"], // disallow or enforce trailing commas
    "valid-typeof": 2, // Ensure that the results of typeof are compared against a valid string

    /* Best Practices - These are rules designed to prevent you from making mistakes. They either prescribe a better way of doing something or help you avoid footguns. */
    "no-fallthrough": 2, // disallow fallthrough of case statements
    "no-multi-spaces": 1, // disallow use of multiple spaces"
    "no-self-assign": 2, // disallow assignments where both sides are exactly the same
    "yoda": 1, // require or disallow Yoda conditions

    /* Variables - These rules have to do with variable declarations. */
    "no-unused-vars": 1, // disallow declaration of variables that are not used in the code
    "no-use-before-define": 2, // disallow use of variables before they are defined

    /* Stylistic Issues - These rules are purely matters of style and are quite subjective. */
    "array-bracket-spacing": [1, "always"], // enforce spacing inside array brackets
    "block-spacing": [1, "always"], // disallow or enforce spaces inside of single line blocks
    "brace-style": [1, "1tbs", { "allowSingleLine": true }], // enforce one true brace style
    "camelcase": 1, // require camel case names
    "comma-spacing": [1, {"before": false, "after": true}], // enforce spacing before and after comma
    "indent": 2, // specify tab or space width for your code
    "keyword-spacing": [1, {"before": true, "after": true, "overrides": {}}], // enforce spacing before and after keywords
    "newline-per-chained-call": 1, // enforce newline after each call when chaining the calls
    "object-curly-spacing": [1, "always"], // require or disallow padding inside curly braces
    "quotes": [1, "single"], // specify whether backticks, double or single quotes should be used
    "semi": [2, "never"], // require or disallow use of semicolons instead of ASI
    "space-before-blocks": 1, // require or disallow a space before blocks
    "space-before-function-paren": [1, "always"], // require or disallow a space before function opening parenthesis
    "space-infix-ops": 1, // require spaces around operators
    "space-unary-ops": 1, // require or disallow spaces before/after unary operators
    "spaced-comment": [1, "always"], // require or disallow a space immediately following the // or /* in a comment

    /* ECMAScript 6 - These rules are only relevant to ES6 environments. */
    "arrow-spacing": 1, // require space before/after arrow function's arrow
    "no-const-assign": 2, // disallow modifying variables that are declared using const
    "no-var": 2, // require let or const instead of var
    "prefer-const": 1, // suggest using const declaration for variables that are never modified after declared
    "prefer-template": 1, // suggest using template literals instead of strings concatenation
  }
}
